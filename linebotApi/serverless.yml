service: irukara

plugins:
  - serverless-offline
  - serverless-layers
  - serverless-dynamodb-local
  - serverless-plugin-optimize
provider:
  name: aws
  runtime: nodejs16.x
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  # ApiGateway
  httpApi:
    cors: true
  logs:
    httpApi: true
  # IAM
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:DescribeTable'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 'dynamodb:GetItem'
            - 'dynamodb:PutItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
            - 'iam:PassRole'
            - 'scheduler:CreateSchedule'
            - 'states:StartExecution'
          Resource:
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-MessagesTable
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-UsersTable
            # MessagesTableのインデックス
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-MessagesTable/index/userIdIndex
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-MessagesTable/index/referenceIndex
            # ImagesTableのインデックス
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable/index/userIdIndex
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable/index/shareStatusIndex
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable/index/referenceIndex
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable/index/modeIndex
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-ImagesTable/index/memberStatusIndex
            # UsersTableのインデックス
            - arn:aws:dynamodb:ap-northeast-1:*:table/${self:provider.stage}-UsersTable/index/modeIndex
            # scheduler
            - '*'

custom:
  defaultStage: local
  otherfile:
    environment:
      local: ${file(./env/local.yml)}
      dev: ${file(./env/dev.yml)}
      staging: ${file(./env/stg.yml)}
      production: ${file(./env/prd.yml)}
  serverless-layers:
    layersDeploymentBucket: ${self:provider.stage}-linebot-layer
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node16
    define: 'require.resolve: undefined'
    platform: node
    concurrency: 10
  dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      convertEmptyValues: false
      noStart: true # dynamodb-localを二重に起動しない

# dist配下と画像のみデプロイする
package:
  individually: true
  include:
    - dist/**
    - src/assets/**
  exclude:
    - '**'

functions:
  main:
    handler: dist/main.handler
    name: ${self:provider.stage}-irukara_api
    description: '${self:provider.stage} LINEBOT用のメイン関数(Nest.js)'
    environment:
      CHANNEL_ACCESS_TOKEN: ${self:custom.otherfile.environment.${self:provider.stage}.CHANNEL_ACCESS_TOKEN}
      CHANNEL_SECRET: ${self:custom.otherfile.environment.${self:provider.stage}.CHANNEL_SECRET}
      CHATGPT_API_KEYS: ${self:custom.otherfile.environment.${self:provider.stage}.CHATGPT_API_KEYS}
      CHATGPT_MODEL: ${self:custom.otherfile.environment.${self:provider.stage}.CHATGPT_MODEL}
      REGION: ${self:custom.otherfile.environment.${self:provider.stage}.REGION}
      DYNAMODB_ENDPOINT: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_ENDPOINT}
      DYNAMODB_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_TABLE_NAME}
      DYNAMODB_USER_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_USER_TABLE_NAME}
      DYNAMODB_IMAGE_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_IMAGE_TABLE_NAME}
      LINEBOT_CHANNEL_ID: ${self:custom.otherfile.environment.${self:provider.stage}.LINEBOT_CHANNEL_ID}
      LIFF_URL: ${self:custom.otherfile.environment.${self:provider.stage}.LIFF_URL}
      STABLE_DIFFUSION_API_KEY: ${self:custom.otherfile.environment.${self:provider.stage}.STABLE_DIFFUSION_API_KEY}
      LAMBDA_ARN: ${self:custom.otherfile.environment.${self:provider.stage}.LAMBDA_ARN}
      LAMBDA_ROLE: ${self:custom.otherfile.environment.${self:provider.stage}.LAMBDA_ROLE}
      NOW_STAGE: ${self:custom.otherfile.environment.${self:provider.stage}.NOW_STAGE}
    runtime: nodejs16.x
    memorySize: 512
    timeout: 30 #(m)
    tracing: PassThrough # awsの他のサービスを実行するときに、トレース情報を自動的に送信する
    events:
      # - http:
      - httpApi:
          method: ANY
          path: /
      - httpApi:
          method: ANY
          path: /{proxy+}

# DynamoDBの作成
resources:
  Resources:
    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-MessagesTable # DynamoDBテーブル名
        AttributeDefinitions:
          - AttributeName: messageId # PK
            AttributeType: S
          # GS
          - AttributeName: userId
            AttributeType: S
          - AttributeName: shareStatus
            AttributeType: N
          - AttributeName: referenceType
            AttributeType: N
          - AttributeName: memberStatus
            AttributeType: N
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
        # GSの設定
        GlobalSecondaryIndexes:
          - IndexName: userIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: shareStatusIndex
            KeySchema:
              - AttributeName: shareStatus
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: referenceIndex
            KeySchema:
              - AttributeName: referenceType
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: memberStatusIndex
            KeySchema:
              - AttributeName: memberStatus
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
        # オンデマンドモードを指定
        BillingMode: PAY_PER_REQUEST
    ImagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-ImagesTable # DynamoDBテーブル名
        AttributeDefinitions:
          - AttributeName: imageId # PK
            AttributeType: S
          # GS
          - AttributeName: userId
            AttributeType: S
          - AttributeName: shareStatus
            AttributeType: N
          - AttributeName: referenceType
            AttributeType: N
          - AttributeName: mode
            AttributeType: N
          - AttributeName: memberStatus
            AttributeType: N
        KeySchema:
          - AttributeName: imageId
            KeyType: HASH
        # GSの設定
        GlobalSecondaryIndexes:
          - IndexName: userIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: shareStatusIndex
            KeySchema:
              - AttributeName: shareStatus
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: referenceIndex
            KeySchema:
              - AttributeName: referenceType
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: modeIndex
            KeySchema:
              - AttributeName: mode
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: memberStatusIndex
            KeySchema:
              - AttributeName: memberStatus
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
        # オンデマンドモードを指定
        BillingMode: PAY_PER_REQUEST
    # ユーザーテーブル
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-UsersTable # DynamoDBテーブル名
        AttributeDefinitions:
          - AttributeName: userId # PK
            AttributeType: S
          # GS
          - AttributeName: status
            AttributeType: N
          - AttributeName: mode
            AttributeType: N
          - AttributeName: createdAt
            AttributeType: N
          - AttributeName: lineId
            AttributeType: N
          - AttributeName: providerType
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        # GSの設定
        GlobalSecondaryIndexes:
          - IndexName: lineId
            KeySchema:
              - AttributeName: status
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: providerType
            KeySchema:
              - AttributeName: status
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: statusIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: modeIndex
            KeySchema:
              - AttributeName: mode
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
          - IndexName: createdAtIndex
            KeySchema:
              - AttributeName: createdAt
                KeyType: HASH
            Projection:
              ProjectionType: ALL # 射影される属性
        # オンデマンドモードを指定
        BillingMode: PAY_PER_REQUEST
  #デプロイ時に編集
  # NextAuthTable:
  #   Type: 'AWS::DynamoDB::Table'
  #   Properties:
  #     TableName:
  #     AttributeDefinitions:
  #       - AttributeName: pk
  #         AttributeType: S
  #       - AttributeName: sk
  #         AttributeType: S
  #       - AttributeName: GSI1PK
  #         AttributeType: S
  #       - AttributeName: GSI1SK
  #         AttributeType: S
  #     KeySchema:
  #       - AttributeName: pk
  #         KeyType: HASH
  #       - AttributeName: sk
  #         KeyType: RANGE
  #     GlobalSecondaryIndexes:
  #       - IndexName: GSI1
  #         Projection:
  #           ProjectionType: ALL
  #         KeySchema:
  #           - AttributeName: GSI1PK
  #             KeyType: HASH
  #           - AttributeName: GSI1SK
  #             KeyType: RANGE
  #     TimeToLiveSpecification:
  #       AttributeName: expires
  #       Enabled: true
