service: irukara

plugins:
  - serverless-offline
  - serverless-layers
  - serverless-dynamodb-local
  - serverless-plugin-optimize
provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  # ApiGateway
  httpApi:
    cors: true
  logs:
    httpApi: true
    
custom:
  defaultStage: local
  otherfile:
    environment:
      local: ${file(./env/local.yml)}
      dev: ${file(./env/dev.yml)}
      staging: ${file(./env/stg.yml)}
      production: ${file(./env/prd.yml)}
  serverless-layers:
    layersDeploymentBucket: ${self:provider.stage}-linebot-layer
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: node18
    define: 'require.resolve: undefined'
    platform: node
    concurrency: 10
  dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 8000
      inMemory: true
      convertEmptyValues: false
      noStart: true # dynamodb-localを二重に起動しない

# dist配下と画像のみデプロイする
package:
  individually: true
  include:
    - dist/**
    - src/assets/**
  exclude:
    - '**'

functions:
  main:
    handler: dist/main.handler
    name: ${self:provider.stage}-irukara_api
    description: '${self:provider.stage} LINEBOT用のメイン関数(Nest.js)'
    environment:
      CHANNEL_ACCESS_TOKEN: ${self:custom.otherfile.environment.${self:provider.stage}.CHANNEL_ACCESS_TOKEN}
      CHANNEL_SECRET: ${self:custom.otherfile.environment.${self:provider.stage}.CHANNEL_SECRET}
      CHATGPT_API_KEYS: ${self:custom.otherfile.environment.${self:provider.stage}.CHATGPT_API_KEYS}
      CHATGPT_MODEL: ${self:custom.otherfile.environment.${self:provider.stage}.CHATGPT_MODEL}
      REGION: ${self:custom.otherfile.environment.${self:provider.stage}.REGION}
      DYNAMODB_ENDPOINT: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_ENDPOINT}
      DYNAMODB_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_TABLE_NAME}
      DYNAMODB_USER_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_USER_TABLE_NAME}
      DYNAMODB_IMAGE_TABLE_NAME: ${self:custom.otherfile.environment.${self:provider.stage}.DYNAMODB_IMAGE_TABLE_NAME}
      LINEBOT_CHANNEL_ID: ${self:custom.otherfile.environment.${self:provider.stage}.LINEBOT_CHANNEL_ID}
      LIFF_URL: ${self:custom.otherfile.environment.${self:provider.stage}.LIFF_URL}
      STABLE_DIFFUSION_API_KEY: ${self:custom.otherfile.environment.${self:provider.stage}.STABLE_DIFFUSION_API_KEY}
      LAMBDA_ARN: ${self:custom.otherfile.environment.${self:provider.stage}.LAMBDA_ARN}
      LAMBDA_ROLE: ${self:custom.otherfile.environment.${self:provider.stage}.LAMBDA_ROLE}
      NOW_STAGE: ${self:custom.otherfile.environment.${self:provider.stage}.NOW_STAGE}
    runtime: nodejs18.x
    memorySize: 512
    timeout: 30 #(m)
    tracing: PassThrough # awsの他のサービスを実行するときに、トレース情報を自動的に送信する
    events:
      # - http:
      - httpApi:
          method: ANY
          path: /
      - httpApi:
          method: ANY
          path: /{proxy+}